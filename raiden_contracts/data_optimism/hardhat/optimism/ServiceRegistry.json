{
  "address": "0x9b4d7E59f6cA64f37864845966E106cfbe6Eaa10",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Token",
          "name": "_token_for_registration",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initial_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price_bump_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price_bump_denominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decay_constant",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_min_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_registration_duration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "service",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valid_till",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deposit_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract Deposit",
          "name": "deposit_contract",
          "type": "address"
        }
      ],
      "name": "RegisteredService",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price_bump_numerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price_bump_denominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decay_constant",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_min_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_registration_duration",
          "type": "uint256"
        }
      ],
      "name": "changeParameters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contract_address",
          "type": "address"
        }
      ],
      "name": "contractExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decay_constant",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_set_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_seconds_passed",
          "type": "uint256"
        }
      ],
      "name": "decayedPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_limit_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deprecated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "everMadeDepositsLen",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_len",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ever_made_deposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "hasValidRegistration",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_has_registration",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "min_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price_bump_denominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price_bump_numerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registration_duration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "service_valid_till",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setDeprecationSwitch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "new_url",
          "type": "string"
        }
      ],
      "name": "setURL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "set_price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "set_price_at",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract Token",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "urls",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2eaa35bc6d9dcd4f954d2d4d3d7c1df16fdd1a50f1a55d9012f839741249ad81",
  "receipt": {
    "to": null,
    "from": "0xFb8C3ba8A46014400487f2fB4d539A5Ff7bC367D",
    "contractAddress": "0x9b4d7E59f6cA64f37864845966E106cfbe6Eaa10",
    "transactionIndex": 0,
    "gasUsed": "4346311",
    "logsBloom": "0x
    "blockHash": "0xc50bfff30032576f844e9015948f8d59745bcc31f5c8fd8ab12ef75ce2a2b942",
    "transactionHash": "0x2eaa35bc6d9dcd4f954d2d4d3d7c1df16fdd1a50f1a55d9012f839741249ad81",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 115433,
        "transactionHash": "0x2eaa35bc6d9dcd4f954d2d4d3d7c1df16fdd1a50f1a55d9012f839741249ad81",
        "address": "0x4200000000000000000000000000000000000006",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x000000000000000000000000fb8c3ba8a46014400487f2fb4d539a5ff7bc367d",
          "0x0000000000000000000000004200000000000000000000000000000000000005"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0xc50bfff30032576f844e9015948f8d59745bcc31f5c8fd8ab12ef75ce2a2b942"
      }
    ],
    "blockNumber": 115433,
    "cumulativeGasUsed": "4346311",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x806E55Dc852609176F187a5C515393C923179d0C",
    "0xFb8C3ba8A46014400487f2fB4d539A5Ff7bC367D",
    "2000000000000000000000",
    6,
    5,
    17280000,
    1000,
    15552000
  ],
  "solcInputHash": "d801cd5192b29c16d8f34c547e4f6dd2",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+ovm+commit.aff196a1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_token_for_registration\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initial_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price_bump_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price_bump_denominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decay_constant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_min_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_registration_duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"service\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valid_till\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deposit_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract Deposit\",\"name\":\"deposit_contract\",\"type\":\"address\"}],\"name\":\"RegisteredService\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price_bump_numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price_bump_denominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decay_constant\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_min_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_registration_duration\",\"type\":\"uint256\"}],\"name\":\"changeParameters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contract_address\",\"type\":\"address\"}],\"name\":\"contractExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decay_constant\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_set_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_seconds_passed\",\"type\":\"uint256\"}],\"name\":\"decayedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"everMadeDepositsLen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_len\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ever_made_deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"hasValidRegistration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_has_registration\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price_bump_denominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price_bump_numerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registration_duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"service_valid_till\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setDeprecationSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"new_url\",\"type\":\"string\"}],\"name\":\"setURL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"set_price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"set_price_at\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract Token\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"urls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"contractExists(address)\":{\"params\":{\"contract_address\":\"The address to check whether a contract is deployed or not\"},\"returns\":{\"_0\":\"True if a contract exists, false otherwise\"}},\"decayedPrice(uint256,uint256)\":{\"params\":{\"_seconds_passed\":\"The number of seconds passed since the initial price was set\",\"_set_price\":\"The initial price\"}},\"setURL(string)\":{\"params\":{\"new_url\":\"The new URL string to be stored\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"contractExists(address)\":{\"notice\":\"Check if a contract exists\"},\"currentPrice()\":{\"notice\":\"The amount to deposit for registration or extension Note: the price moves quickly depending on what other addresses do. The current price might change after you send a `deposit()` transaction before the transaction is executed.\"},\"decay_constant()\":{\"notice\":\"The amount of time (in seconds) till the price decreases to roughly 1/e.\"},\"decayedPrice(uint256,uint256)\":{\"notice\":\"Calculates the decreased price after a number of seconds\"},\"everMadeDepositsLen()\":{\"notice\":\"A getter function for seeing the length of ever_made_deposits array\"},\"setURL(string)\":{\"notice\":\"Sets the URL used to access a service via HTTP Only a currently registered service can call this successfully\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"data/source/services/ServiceRegistry.sol\":\"ServiceRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"data/source/raiden/Token.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\ninterface Token {\\n\\n    /// @return supply total amount of tokens\\n    function totalSupply() external view returns (uint256 supply);\\n\\n    /// @param _owner The address from which the balance will be retrieved\\n    /// @return balance The balance\\n    function balanceOf(address _owner) external view returns (uint256 balance);\\n\\n    /// @notice send `_value` token to `_to` from `msg.sender`\\n    /// @param _to The address of the recipient\\n    /// @param _value The amount of token to be transferred\\n    /// @return success Whether the transfer was successful or not\\n    function transfer(address _to, uint256 _value) external returns (bool success);\\n\\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\\n    /// @param _from The address of the sender\\n    /// @param _to The address of the recipient\\n    /// @param _value The amount of token to be transferred\\n    /// @return success Whether the transfer was successful or not\\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\\n\\n    /// @notice `msg.sender` approves `_spender` to spend `_value` tokens\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @param _value The amount of wei to be approved for transfer\\n    /// @return success Whether the approval was successful or not\\n    function approve(address _spender, uint256 _value) external returns (bool success);\\n\\n    /// @param _owner The address of the account owning tokens\\n    /// @param _spender The address of the account able to transfer the tokens\\n    /// @return remaining Amount of remaining tokens allowed to spent\\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\\n\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\n\\n    // Optionally implemented function to show the number of decimals for the token\\n    function decimals() external view returns (uint8 decimals);\\n}\\n\",\"keccak256\":\"0x5a8ccb9fa426228d9e213164f22a94b0ac57f1aa15ab76ce88a96177edd7b0b3\",\"license\":\"MIT\"},\"data/source/raiden/Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\n/// @title Utils\\n/// @notice Utils contract for various helpers used by the Raiden Network smart\\n/// contracts.\\ncontract Utils {\\n    /// @notice Check if a contract exists\\n    /// @param contract_address The address to check whether a contract is\\n    /// deployed or not\\n    /// @return True if a contract exists, false otherwise\\n    function contractExists(address contract_address) public view returns (bool) {\\n        uint size;\\n\\n        assembly { // solium-disable-line security/no-inline-assembly\\n            size := extcodesize(contract_address)\\n        }\\n\\n        return size > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x3fb4df9cdadd3711bffff81a451868c7a1ee8a2f3ff1a20a4343def15cb38e0f\",\"license\":\"MIT\"},\"data/source/services/ServiceRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/* solium-disable indentation */\\n/* solium-disable security/no-block-members */\\npragma solidity 0.7.6;\\n\\nimport \\\"../raiden/Token.sol\\\";\\nimport \\\"../raiden/Utils.sol\\\";\\n\\ncontract ServiceRegistryConfigurableParameters {\\n    address public controller;\\n\\n    modifier onlyController() {\\n        require(msg.sender == controller, \\\"caller is not the controller\\\");\\n        _;\\n    }\\n\\n    // After a price is set to set_price at timestamp set_price_at,\\n    // the price decays according to decayedPrice().\\n    uint256 public set_price;\\n    uint256 public set_price_at;\\n\\n    /// The amount of time (in seconds) till the price decreases to roughly 1/e.\\n    uint256 public decay_constant = 200 days;\\n\\n    // Once the price is at min_price, it can't decay further.\\n    uint256 public min_price = 1000;\\n\\n    // Whenever a deposit comes in, the price is multiplied by numerator / denominator.\\n    uint256 public price_bump_numerator = 1;\\n    uint256 public price_bump_denominator = 1;\\n\\n    // The duration of service registration/extension in seconds\\n    uint256 public registration_duration = 180 days;\\n\\n    // If true, new deposits are no longer accepted.\\n    bool public deprecated = false;\\n\\n    function setDeprecationSwitch() public onlyController returns (bool _success) {\\n        deprecated = true;\\n        return true;\\n    }\\n\\n    function changeParameters(\\n            uint256 _price_bump_numerator,\\n            uint256 _price_bump_denominator,\\n            uint256 _decay_constant,\\n            uint256 _min_price,\\n            uint256 _registration_duration\\n    ) public onlyController returns (bool _success) {\\n        changeParametersInternal(\\n            _price_bump_numerator,\\n            _price_bump_denominator,\\n            _decay_constant,\\n            _min_price,\\n            _registration_duration\\n        );\\n        return true;\\n    }\\n\\n    function changeParametersInternal(\\n            uint256 _price_bump_numerator,\\n            uint256 _price_bump_denominator,\\n            uint256 _decay_constant,\\n            uint256 _min_price,\\n            uint256 _registration_duration\\n    ) internal {\\n        refreshPrice();\\n        setPriceBumpParameters(_price_bump_numerator, _price_bump_denominator);\\n        setMinPrice(_min_price);\\n        setDecayConstant(_decay_constant);\\n        setRegistrationDuration(_registration_duration);\\n    }\\n\\n    // Updates set_price to be currentPrice() and set_price_at to be now\\n    function refreshPrice() private {\\n        set_price = currentPrice();\\n        set_price_at = block.timestamp;\\n    }\\n\\n    function setPriceBumpParameters(\\n            uint256 _price_bump_numerator,\\n            uint256 _price_bump_denominator\\n    ) private {\\n        require(_price_bump_denominator > 0, \\\"divide by zero\\\");\\n        require(_price_bump_numerator >= _price_bump_denominator, \\\"price dump instead of bump\\\");\\n        require(_price_bump_numerator < 2 ** 40, \\\"price dump numerator is too big\\\");\\n        price_bump_numerator = _price_bump_numerator;\\n        price_bump_denominator = _price_bump_denominator;\\n    }\\n\\n    function setMinPrice(uint256 _min_price) private {\\n        // No checks.  Even allowing zero.\\n        min_price = _min_price;\\n        // No checks or modifications on set_price.\\n        // Even if set_price is smaller than min_price, currentPrice() function returns min_price.\\n    }\\n\\n    function setDecayConstant(uint256 _decay_constant) private {\\n        require(_decay_constant > 0, \\\"attempt to set zero decay constant\\\");\\n        require(_decay_constant < 2 ** 40, \\\"too big decay constant\\\");\\n        decay_constant = _decay_constant;\\n    }\\n\\n    function setRegistrationDuration(uint256 _registration_duration) private {\\n        // No checks.  Even allowing zero (when no new registrations are possible).\\n        registration_duration = _registration_duration;\\n    }\\n\\n\\n    /// @notice The amount to deposit for registration or extension\\n    /// Note: the price moves quickly depending on what other addresses do.\\n    /// The current price might change after you send a `deposit()` transaction\\n    /// before the transaction is executed.\\n    function currentPrice() public view returns (uint256) {\\n        require(block.timestamp >= set_price_at, \\\"An underflow in price computation\\\");\\n        uint256 seconds_passed = block.timestamp - set_price_at;\\n\\n        return decayedPrice(set_price, seconds_passed);\\n    }\\n\\n\\n    /// @notice Calculates the decreased price after a number of seconds\\n    /// @param _set_price The initial price\\n    /// @param _seconds_passed The number of seconds passed since the initial\\n    /// price was set\\n    function decayedPrice(uint256 _set_price, uint256 _seconds_passed) public\\n        view returns (uint256) {\\n        // We are here trying to approximate some exponential decay.\\n        // exp(- X / A) where\\n        //   X is the number of seconds since the last price change\\n        //   A is the decay constant (A = 200 days corresponds to 0.5% decrease per day)\\n\\n        // exp(- X / A) ~~ P / Q where\\n        //   P = 24 A^4\\n        //   Q = 24 A^4 + 24 A^3X + 12 A^2X^2 + 4 AX^3 + X^4\\n        // Note: swap P and Q, and then think about the Taylor expansion.\\n\\n        uint256 X = _seconds_passed;\\n\\n        if (X >= 2 ** 40) { // The computation below overflows.\\n            return min_price;\\n        }\\n\\n        uint256 A = decay_constant;\\n\\n        uint256 P = 24 * (A ** 4);\\n        uint256 Q = P + 24*(A**3)*X + 12*(A**2)*(X**2) + 4*A*(X**3) + X**4;\\n\\n        // The multiplication below is not supposed to overflow because\\n        // _set_price should be at most 2 ** 90 and\\n        // P should be at most 24 * (2 ** 40).\\n        uint256 price = _set_price * P / Q;\\n\\n        // Not allowing a price smaller than min_price.\\n        // Once it's too low it's too low forever.\\n        if (price < min_price) {\\n            price = min_price;\\n        }\\n        return price;\\n    }\\n}\\n\\n\\ncontract Deposit {\\n    // This contract holds ERC20 tokens as deposit until a predetemined point of time.\\n\\n    // The ERC20 token contract that the deposit is about.\\n    Token public token;\\n\\n    // The address of ServiceRegistry contract that this deposit is associated with.\\n    // If the address has no code, service_registry.deprecated() call will fail.\\n    ServiceRegistryConfigurableParameters service_registry;\\n\\n    // The address that can withdraw the deposit after the release time.\\n    address public withdrawer;\\n\\n    // The timestamp after which the withdrawer can withdraw the deposit.\\n    uint256 public release_at;\\n\\n    /// @param _token The address of the ERC20 token contract where the deposit is accounted\\n    /// @param _release_at The timestap after which the withdrawer can withdraw the deposit\\n    /// @param _withdrawer The address that can withdraw the deposit after the release time\\n    /// @param _service_registry The address of ServiceRegistry whose deprecation enables immediate withdrawals\\n    constructor(\\n        Token _token,\\n        uint256 _release_at,\\n        address _withdrawer,\\n        ServiceRegistryConfigurableParameters _service_registry\\n    ) {\\n        token = _token;\\n        // Don't care even if it's in the past.\\n        release_at = _release_at;\\n        withdrawer = _withdrawer;\\n        service_registry = _service_registry;\\n    }\\n\\n    // In order to make a deposit, transfer the ERC20 token into this contract.\\n    // If you transfer a wrong kind of ERC20 token or ETH into this contract,\\n    // these tokens will be lost forever.\\n\\n    /// @notice Withdraws the tokens that have been deposited\\n    /// Only `withdrawer` can call this.\\n    /// @param _to The address where the withdrawn tokens should go\\n    function withdraw(address payable _to) external {\\n        uint256 balance = token.balanceOf(address(this));\\n        require(msg.sender == withdrawer, \\\"the caller is not the withdrawer\\\");\\n        require(block.timestamp >= release_at || service_registry.deprecated(), \\\"deposit not released yet\\\");\\n        require(balance > 0, \\\"nothing to withdraw\\\");\\n        require(token.transfer(_to, balance), \\\"token didn't transfer\\\");\\n        //selfdestruct(_to); // OVM does not support selfdestruct\\n    }\\n}\\n\\n\\ncontract ServiceRegistry is Utils, ServiceRegistryConfigurableParameters {\\n    Token public token;\\n\\n    mapping(address => uint256) public service_valid_till;\\n    mapping(address => string) public urls;  // URLs of services for HTTP access\\n\\n    // An append-only list of addresses that have ever made a deposit.\\n    // Starting from this list, all alive registrations can be figured out.\\n    address[] public ever_made_deposits;\\n\\n    // @param service The address of the registered service provider\\n    // @param valid_till The timestamp of the moment when the registration expires\\n    // @param deposit_amount The amount of deposit transferred\\n    // @param deposit The address of Deposit instance where the deposit is stored\\n    event RegisteredService(address indexed service, uint256 valid_till, uint256 deposit_amount, Deposit deposit_contract);\\n\\n    // @param _token_for_registration The address of the ERC20 token contract that services use for registration fees\\n    // @param _controller The address that can change parameters and deprecate the ServiceRegistry\\n    // @param _initial_price The amount of tokens needed initially for a slot\\n    // @param _price_bump_numerator The ratio of price bump after deposit is made (numerator)\\n    // @param _price_bump_denominator The ratio of price bump after deposit is made (denominator)\\n    // @param _decay_constant The number of seconds after which the price becomes roughly 1/e\\n    // @param _min_price The minimum amount of tokens needed for a slot\\n    // @param _registration_duration The number of seconds (roughly, barring block time & miners'\\n    // timestamp errors) of a slot gained for a successful deposit\\n    constructor(\\n            Token _token_for_registration,\\n            address _controller,\\n            uint256 _initial_price,\\n            uint256 _price_bump_numerator,\\n            uint256 _price_bump_denominator,\\n            uint256 _decay_constant,\\n            uint256 _min_price,\\n            uint256 _registration_duration\\n    ) {\\n        require(address(_token_for_registration) != address(0x0), \\\"token at address zero\\\");\\n        require(contractExists(address(_token_for_registration)), \\\"token has no code\\\");\\n        require(_initial_price >= min_price, \\\"initial price too low\\\");\\n        require(_initial_price <= 2 ** 90, \\\"intiial price too high\\\");\\n\\n        token = _token_for_registration;\\n        // Check if the contract is indeed a token contract\\n        require(token.totalSupply() > 0, \\\"total supply zero\\\");\\n        controller = _controller;\\n\\n        // Set up the price and the set price timestamp\\n        set_price = _initial_price;\\n        set_price_at = block.timestamp;\\n\\n        // Set the parameters\\n        changeParametersInternal(_price_bump_numerator, _price_bump_denominator, _decay_constant, _min_price, _registration_duration);\\n    }\\n\\n    // @notice Locks tokens and registers a service or extends the registration\\n    // @param _limit_amount The biggest amount of tokens that the caller is willing to deposit\\n    // The call fails if the current price is higher (this is always possible\\n    // when other parties have just called `deposit()`)\\n    function deposit(uint _limit_amount) public returns (bool _success) {\\n        require(! deprecated, \\\"this contract was deprecated\\\");\\n\\n        uint256 amount = currentPrice();\\n        require(_limit_amount >= amount, \\\"not enough limit\\\");\\n\\n        // Extend the service position.\\n        uint256 valid_till = service_valid_till[msg.sender];\\n        if (valid_till == 0) { // a first time joiner\\n            ever_made_deposits.push(msg.sender);\\n        }\\n        if (valid_till < block.timestamp) { // a first time joiner or an expired service.\\n            valid_till = block.timestamp;\\n        }\\n        // Check against overflow.\\n        require(valid_till < valid_till + registration_duration, \\\"overflow during extending the registration\\\");\\n        valid_till = valid_till + registration_duration;\\n        assert(valid_till > service_valid_till[msg.sender]);\\n        service_valid_till[msg.sender] = valid_till;\\n\\n        // Record the price\\n        set_price = amount * price_bump_numerator / price_bump_denominator;\\n        if (set_price > 2 ** 90) {\\n            set_price = 2 ** 90; // Preventing overflows.\\n        }\\n        set_price_at = block.timestamp;\\n\\n        // Move the deposit in a new Deposit contract.\\n        assert(block.timestamp < valid_till);\\n        Deposit depo = new Deposit(token, valid_till, msg.sender, this);\\n        require(token.transferFrom(msg.sender, address(depo), amount), \\\"Token transfer for deposit failed\\\");\\n\\n        // Fire event\\n        emit RegisteredService(msg.sender, valid_till, amount, depo);\\n\\n        return true;\\n    }\\n\\n    /// @notice Sets the URL used to access a service via HTTP\\n    /// Only a currently registered service can call this successfully\\n    /// @param new_url The new URL string to be stored\\n    function setURL(string memory new_url) public returns (bool _success) {\\n        require(hasValidRegistration(msg.sender), \\\"registration expired\\\");\\n        require(bytes(new_url).length != 0, \\\"new url is empty string\\\");\\n        urls[msg.sender] = new_url;\\n        return true;\\n    }\\n\\n    /// A getter function for seeing the length of ever_made_deposits array\\n    function everMadeDepositsLen() public view returns (uint256 _len) {\\n        return ever_made_deposits.length;\\n    }\\n\\n    function hasValidRegistration(address _address) public view returns (bool _has_registration) {\\n        return block.timestamp < service_valid_till[_address];\\n    }\\n}\\n\\n\\n// MIT License\\n\\n// Copyright (c) 2018\\n\\n// Permission is hereby granted, free of charge, to any person obtaining a copy\\n// of this software and associated documentation files (the \\\"Software\\\"), to deal\\n// in the Software without restriction, including without limitation the rights\\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n// copies of the Software, and to permit persons to whom the Software is\\n// furnished to do so, subject to the following conditions:\\n\\n// The above copyright notice and this permission notice shall be included in all\\n// copies or substantial portions of the Software.\\n\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\n// SOFTWARE.\",\"keccak256\":\"0x5a967df24ca5e9bb01d0b5d550b6a420d6998831766e031686ca7bba11362bae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052630107ac0060036200001562000872565b50506103e860046200002662000872565b5050600160056200003662000872565b5050600160066200004662000872565b505062ed4e0060076200005862000872565b506000905060086001816200006c620008d1565b8160ff021916908315150217906200008362000872565b5050503480156200009e576000806200009b6200091e565b50505b5060405162002e9238038062002e928339818101604052610100811015620000d057600080620000cd6200091e565b50505b8101908080519291906020018051929190602001805192919060200180519291906020018051929190602001805192919060200180519291906020018051925050506001600160a01b038816620001785760405162461bcd60e51b815260206004820152601560248201527f746f6b656e2061742061646472657373207a65726f0000000000000000000000604482015260640160405180910390620001756200091e565b50505b620001838862000486565b620001d35760405162461bcd60e51b8152602060048201526011602482015270746f6b656e20686173206e6f20636f646560781b604482015260640160405180910390620001d06200091e565b50505b6004620001df620008d1565b8610156200023e5760405162461bcd60e51b815260206004820152601560248201527f696e697469616c20707269636520746f6f206c6f7700000000000000000000006044820152606401604051809103906200023b6200091e565b50505b6b040000000000000000000000861115620002aa5760405162461bcd60e51b815260206004820152601660248201527f696e746969616c20707269636520746f6f206869676800000000000000000000604482015260640160405180910390620002a76200091e565b50505b87600861010081620002bb620008d1565b816001600160a01b0302191690836001600160a01b0316021790620002df62000872565b50505060006008600190620002f3620008d1565b906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b81526004016020604051808303818680620003386200098b565b15801562000350576000806200034d6200091e565b50505b505a6200035c620009d8565b50505050501580156200037e573d6000803e3d60006200037b6200091e565b50505b505050506040513d6020811015620003a0576000806200039d6200091e565b50505b810190808051939093119250620003ff9150505760405162461bcd60e51b8152602060048201526011602482015270746f74616c20737570706c79207a65726f60781b604482015260640160405180910390620003fc6200091e565b50505b8660006001816200040f620008d1565b816001600160a01b0302191690836001600160a01b03160217906200043362000872565b50505085600181906200044562000872565b5050505a6200045362000ace565b8060026200046062000872565b5050506200047885858585856200049d60201b60201c565b505050505050505062000b15565b60008082620004946200098b565b15159392505050565b620004a7620004db565b620004b3858562000512565b620004be8262000648565b620004c9836200065c565b620004d4816200071b565b5050505050565b620004e562000729565b806001620004f262000872565b5050505a6200050062000ace565b8060026200050d62000872565b505050565b60008111620005635760405162461bcd60e51b815260206004820152600e60248201526d646976696465206279207a65726f60901b604482015260640160405180910390620005606200091e565b50505b80821015620005c35760405162461bcd60e51b815260206004820152601a60248201527f70726963652064756d7020696e7374656164206f662062756d70000000000000604482015260640160405180910390620005c06200091e565b50505b650100000000008210620006285760405162461bcd60e51b815260206004820152601f60248201527f70726963652064756d70206e756d657261746f7220697320746f6f2062696700604482015260640160405180910390620006256200091e565b50505b818060056200063662000872565b5050508060068190620004d462000872565b808060046200065662000872565b50505050565b60008111620006a85760405162461bcd60e51b815260040180806020018281038252602281526020018062002e4f6022913960400191505060405180910390620006a56200091e565b50505b6501000000000081106200070d5760405162461bcd60e51b815260206004820152601660248201527f746f6f2062696720646563617920636f6e7374616e74000000000000000000006044820152606401604051809103906200070a6200091e565b50505b808060036200065662000872565b808060076200065662000872565b6000600262000737620008d1565b5a6200074262000ace565b10156200078c5760405162461bcd60e51b815260040180806020018281038252602181526020018062002e716021913960400191505060405180910390620007896200091e565b50505b600060026200079a620008d1565b5a620007a562000ace565b039050620007bf6001620007b8620008d1565b82620007c5565b91505090565b600081650100000000008110620007eb576004620007e2620008d1565b9150506200086c565b60006003620007f9620008d1565b905060006004820a601802905060006004840a6003850a84600402026002860a6002860a600c0202866003870a6018020285010101019050600081838902816200083f57fe5b04905060046200084e620008d1565b8110156200086557600462000862620008d1565b90505b9450505050505b92915050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b60005b60408110156200050d57600082820152602001620008b8565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620008b8565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015620009585780860151828201604001526020016200093b565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620008b8565b638540661f598160e01b815262000a0c565b80808311156200086c575090919050565b80808310156200086c575090919050565b836004820152846024820152606060448201528660648201526084810160005b8881101562000a4657808801518282015260200162000a2c565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af1505962000a9d8d3d620009fb565b8c0162000aab8187620009ea565b5b8281101562000ac2576000815260200162000aac565b50929c50505050505050565b63bdbf8c36598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620008b8565b61232a8062000b256000396000f3fe60806040523480156200001c57600080620000196200132b565b50505b5060043610620001355760003560e01c8063077964ce14620001455780630e136b19146200016157806331000384146200017f5780634d48e3cd146200018957806351cc859914620001ba5780635236a4e614620001fd5780635d45d06114620002075780637709bc7814620002115780637734340814620002455780638f43987c146200031a57806399b7879514620003245780639d1b464a1462000358578063a4a7c9a41462000362578063a619377d146200036c578063b6b55f2514620003b3578063b8af7bca14620003de578063c3ab5fb414620003e8578063d888e61414620003f2578063ebc00c0514620004a0578063f77c479114620004d4578063fc0c546a14620004de578063fdcbb02d14620004e8575b600080620001426200132b565b50505b6200014f620004f2565b60405190815260200160405180910390f35b6200016b62000501565b604051901515815260200160405180910390f35b6200014f6200051c565b6200014f60048036036040811015620001ac57600080620001a96200132b565b50505b508035906020013562000528565b6200016b600480360360a0811015620001dd57600080620001da6200132b565b50505b5080359060208101359060408101359060608101359060800135620005d3565b6200014f62000685565b6200014f62000691565b6200016b600480360360208110156200023457600080620002316200132b565b50505b50356001600160a01b0316620006a6565b6200016b600480360360208110156200026857600080620002656200132b565b50505b810190602081018135600160201b8111156200028e576000806200028b6200132b565b50505b820183602082011115620002ac57600080620002a96200132b565b50505b803590602001918460018302840111600160201b83111715620002d957600080620002d66200132b565b50505b91908080601f0160208091040260200160405190810160405281815292919060208401838380828437600092019190915250929550620006bd945050505050565b6200014f620007cb565b6200014f600480360360208110156200034757600080620003446200132b565b50505b50356001600160a01b0316620007d7565b6200014f620007f1565b6200014f62000887565b62000397600480360360208110156200038f576000806200038c6200132b565b50505b503562000893565b6040516001600160a01b03909116815260200160405180910390f35b6200016b60048036036020811015620003d657600080620003d36200132b565b50505b5035620008e3565b6200016b62000eab565b6200014f62000f73565b62000426600480360360208110156200041557600080620004126200132b565b50505b50356001600160a01b031662000f7f565b60405160208082528190810183818151815260200191508051906020019080838360005b83811015620004645780820151838201526020016200044a565b50505050905090810190601f168015620004925780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200016b60048036036020811015620004c357600080620004c06200132b565b50505b50356001600160a01b031662001052565b6200039762001086565b6200039762001093565b6200014f620010a1565b6006620004fe62001398565b81565b600060086200050f62001398565b906101000a900460ff1681565b6001620004fe62001398565b600081600160281b81106200054c5760046200054362001398565b915050620005cd565b600060036200055a62001398565b905060006004820a601802905060006004840a6003850a84600402026002860a6002860a600c0202866003870a601802028501010101905060008183890281620005a057fe5b0490506004620005af62001398565b811015620005c6576004620005c362001398565b90505b9450505050505b92915050565b60008080620005e162001398565b906101000a90046001600160a01b03166001600160a01b03165a62000605620013f5565b6001600160a01b0316146200066a5760405162461bcd60e51b815260206004820152601c60248201527b31b0b63632b91034b9903737ba103a34329031b7b73a3937b63632b960211b604482015260640160405180910390620006676200132b565b50505b620006798686868686620010ad565b50600195945050505050565b6002620004fe62001398565b6000600b80620006a062001398565b91505090565b60008082620006b46200143c565b15159392505050565b6000620006d45a620006ce620013f5565b62001052565b620007275760405162461bcd60e51b81526020600482015260146024820152731c9959da5cdd1c985d1a5bdb88195e1c1a5c995960621b604482015260640160405180910390620007246200132b565b50505b81516200077f5760405162461bcd60e51b81526020600482015260176024820152766e65772075726c20697320656d70747920737472696e6760481b6044820152606401604051809103906200077c6200132b565b50505b81600a60005a6200078f620013f5565b6001600160a01b03166001600160a01b03168152602001908152602001600020908051620007c292916020019062001489565b50600192915050565b6003620004fe62001398565b60096020528060005260406000209050620004fe62001398565b60006002620007ff62001398565b5a6200080a6200154b565b1015620008545760405162461bcd60e51b8152600401808060200182810382526021815260200180620023096021913960400191505060405180910390620008516200132b565b50505b600060026200086262001398565b5a6200086d6200154b565b039050620006a060016200088062001398565b8262000528565b6007620004fe62001398565b600b8181620008a162001398565b8110620008b857600080620008b56200132b565b50505b9060005260206000200160009150620008d062001398565b906101000a90046001600160a01b031681565b6000806008620008f262001398565b906101000a900460ff1615620009585760405162461bcd60e51b815260206004820152601c60248201527b1d1a1a5cc818dbdb9d1c9858dd081dd85cc819195c1c9958d85d195960221b604482015260640160405180910390620009556200132b565b50505b600062000964620007f1565b905080831015620009b95760405162461bcd60e51b815260206004820152601060248201526f1b9bdd08195b9bdd59da081b1a5b5a5d60821b604482015260640160405180910390620009b66200132b565b50505b6000600960005a620009ca620013f5565b6001600160a01b03166001600160a01b03168152602001908152602001600020620009f462001398565b90508062000a6c57600b5a62000a09620013f5565b908060018162000a1862001398565b01808262000a2562001592565b50506000928352600019019160209150200160018162000a4462001398565b816001600160a01b0302191690836001600160a01b031602179062000a6862001592565b5050505b5a62000a776200154b565b81101562000a8d575a62000a8a6200154b565b90505b600762000a9962001398565b8101811062000ae55760405162461bcd60e51b815260040180806020018281038252602a815260200180620022df602a91396040019150506040518091039062000ae26200132b565b50505b600762000af162001398565b01600960005a62000b01620013f5565b6001600160a01b03166001600160a01b0316815260200190815260200160002062000b2b62001398565b811162000b3457fe5b80600960005a62000b44620013f5565b6001600160a01b03166001600160a01b03168152602001908152602001600020819062000b7062001592565b505050600662000b7f62001398565b600562000b8b62001398565b83028162000b9557fe5b0480600162000ba362001592565b5050506001605a1b600162000bb762001398565b111562000bd4576001605a1b80600162000bd062001592565b5050505b5a62000bdf6200154b565b80600262000bec62001592565b505050805a62000bfb6200154b565b1062000c0357fe5b60006001600862000c1362001398565b906101000a90046001600160a01b0316825a62000c2f620013f5565b5a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b604081101562000c875760008282015260200162000c6e565b50505060405162000c9890620015e1565b6001600160a01b039485168152602081019390935290831660408084019190915292166060820152608001905180910390600062000cd5620015ef565b50508015801562000cf5573d6000803e3d600062000cf26200132b565b50505b5090506001600862000d0662001398565b906101000a90046001600160a01b03166001600160a01b03166323b872dd5a62000d2f620013f5565b83866040516001600160e01b031960e086901b1681526001600160a01b03938416600482015291909216602482015260448101919091526064016020604051808303816000878062000d806200143c565b15801562000d985760008062000d956200132b565b50505b505a62000da462001674565b50505050505015801562000dc7573d6000803e3d600062000dc46200132b565b50505b505050506040513d602081101562000de95760008062000de66200132b565b50505b810190808051925062000e3c9150505760405162461bcd60e51b81526004018080602001828103825260218152602001806200229c602191396040019150506040518091039062000e396200132b565b50505b5a62000e47620013f5565b6001600160a01b03167f318a723b2ed9fac0536d971fcca40b4653a29e1956dd7b7b8972486947d8652983858460405180848152602001838152602001826001600160a01b03168152602001935050505060405180910390a2506001949350505050565b6000808062000eb962001398565b906101000a90046001600160a01b03166001600160a01b03165a62000edd620013f5565b6001600160a01b03161462000f425760405162461bcd60e51b815260206004820152601c60248201527b31b0b63632b91034b9903737ba103a34329031b7b73a3937b63632b960211b60448201526064016040518091039062000f3f6200132b565b50505b60016008818162000f5262001398565b8160ff0219169083151502179062000f6962001592565b5050506001905090565b6004620004fe62001398565b600a60205280600052604060002090508062000f9a62001398565b600181600116156101000203166002900480601f01602080910402602001604051908101604052818152919060208301828062000fd662001398565b600181600116156101000203166002900480156200104a5780601f10620010155761010080836200100662001398565b0402835291602001916200104a565b820191906000526020600020905b816200102e62001398565b815290600101906020018083116200102357829003601f168201915b505050505081565b6001600160a01b03811660009081526009602052604081206200107462001398565b5a6200107f6200154b565b1092915050565b600080620008d062001398565b60016008620008d062001398565b6005620004fe62001398565b620010b7620010eb565b620010c3858562001122565b620010ce8262001253565b620010d98362001267565b620010e4816200131d565b5050505050565b620010f5620007f1565b8060016200110262001592565b5050505a620011106200154b565b8060026200111d62001592565b505050565b60008111620011735760405162461bcd60e51b815260206004820152600e60248201526d646976696465206279207a65726f60901b604482015260640160405180910390620011706200132b565b50505b80821015620011d05760405162461bcd60e51b815260206004820152601a602482015279070726963652064756d7020696e7374656164206f662062756d760341b604482015260640160405180910390620011cd6200132b565b50505b600160281b8210620012335760405162461bcd60e51b815260206004820152601f60248201527f70726963652064756d70206e756d657261746f7220697320746f6f2062696700604482015260640160405180910390620012306200132b565b50505b818060056200124162001592565b5050508060068190620010e462001592565b808060046200126162001592565b50505050565b60008111620012b35760405162461bcd60e51b8152600401808060200182810382526022815260200180620022bd6022913960400191505060405180910390620012b06200132b565b50505b600160281b81106200130f5760405162461bcd60e51b81526020600482015260166024820152751d1bdbc8189a59c8191958d85e4818dbdb9cdd185b9d60521b6044820152606401604051809103906200130c6200132b565b50505b808060036200126162001592565b808060076200126162001592565b632a2a7adb598160e01b8152600481016020815285602082015260005b868110156200136557808601518282016040015260200162001348565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156200111d57600082820152602001620013dc565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620013dc565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620013dc565b82806200149562001398565b600181600116156101000203166002900490600052602060002090601f016020900481019282620014d557600085620014cd62001592565b505062001539565b82601f10620014f357805160ff19168380011785620014cd62001592565b828001600101856200150462001592565b5050821562001539579182015b8281111562001539578251826200152762001592565b50509160200191906001019062001511565b50620015479291506200176a565b5090565b63bdbf8c36598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b80516000825293506020620013dc565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b600081526020620013dc565b610b0e806200178e83390190565b6314aa2ff7598160e01b8152600481016020815286602082015260005b87811015620016295780870151828201604001526020016200160c565b506020828860640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8151965059825b81811015620010e457600081526020016200165e565b6385979f76598160e01b8152620016a8565b8080831115620005cd575090919050565b8080831015620005cd575090919050565b836004820152846024820152606060448201528760648201526084810160005b89811015620016e2578089015182820152602001620016c8565b506060828a60a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8c8c82606087013350600060045af15059620017398e3d62001697565b8d0162001747818762001686565b5b828110156200175e576000815260200162001748565b50929d50505050505050565b808211156200154757600080826200178162001592565b5050506001016200176a56fe608060405234801561001957600080610016610123565b50505b50604051610b0e380380610b0e8339818101604052608081101561004557600080610042610123565b50505b81019080805192919060200180519291906020018051929190602001805192508591506000905060018161007761018e565b816001600160a01b0302191690836001600160a01b03160217906100996101ee565b50505082600381906100a96101ee565b50505081600260006101000a816100be61018e565b816001600160a01b0302191690836001600160a01b03160217906100e06101ee565b50505080600160006101000a816100f561018e565b816001600160a01b0302191690836001600160a01b03160217906101176101ee565b5050505050505061023c565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101561015b578086015182820160400152602001610140565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156101e9576000828201526020016101d2565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b6000815260206101d2565b6108c38061024b6000396000f3fe60806040523480156100195760008061001661056d565b50505b50600436106100555760003560e01c806351cff8d914610063578063a0d711c414610094578063cdc18424146100ae578063fc0c546a146100d2575b60008061006061056d565b50505b610092600480360360208110156100825760008061007f61056d565b50505b50356001600160a01b03166100da565b005b61009c610536565b60405190815260200160405180910390f35b6100b6610543565b6040516001600160a01b03909116815260200160405180910390f35b6100b6610562565b600080806100e66105d8565b906101000a90046001600160a01b03166001600160a01b03166370a082315a63996d79a5598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051925060005b604081101561015a57600082820152602001610143565b5050506040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024016020604051808303818680610197610638565b1580156101ac576000806101a961056d565b50505b505a6101b6610684565b50505050501580156101d5573d6000803e3d60006101d261056d565b50505b505050506040513d60208110156101f4576000806101f161056d565b50505b8101908080519350600092506002915061020e90506105d8565b906101000a90046001600160a01b03166001600160a01b03165a610230610771565b6001600160a01b0316146102935760405162461bcd60e51b815260206004820181905260248201527f7468652063616c6c6572206973206e6f7420746865207769746864726177657260448201526064016040518091039061029061056d565b50505b600361029d6105d8565b5a6102a66107b7565b1015806103655750600060016102ba6105d8565b906101000a90046001600160a01b03166001600160a01b0316630e136b196040518163ffffffff1660e01b815260040160206040518083038186806102fd610638565b1580156103125760008061030f61056d565b50505b505a61031c610684565b505050505015801561033b573d6000803e3d600061033861056d565b50505b505050506040513d602081101561035a5760008061035761056d565b50505b810190808051925050505b6103b95760405162461bcd60e51b815260206004820152601860248201527719195c1bdcda5d081b9bdd081c995b19585cd959081e595d60421b6044820152606401604051809103906103b661056d565b50505b6000811161040c5760405162461bcd60e51b81526020600482015260136024820152726e6f7468696e6720746f20776974686472617760681b60448201526064016040518091039061040961056d565b50505b6000806104176105d8565b906101000a90046001600160a01b03166001600160a01b031663a9059cbb83836040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038160008780610478610638565b15801561048d5760008061048a61056d565b50505b505a6104976107fd565b5050505050501580156104b7573d6000803e3d60006104b461056d565b50505b505050506040513d60208110156104d6576000806104d361056d565b50505b81019080805192506105329150505760405162461bcd60e51b81526020600482015260156024820152743a37b5b2b7103234b23713ba103a3930b739b332b960591b60448201526064016040518091039061052f61056d565b50505b5050565b60036105406105d8565b81565b6000600261054f6105d8565b906101000a90046001600160a01b031681565b60008061054f6105d8565b632a2a7adb598160e01b8152600481016020815285602082015260005b868110156105a557808601518282016040015260200161058a565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156106335760008282015260200161061c565b505050565b638435035b598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051600082529350602061061c565b638540661f598160e01b81526106b7565b80808311156106a15750815b92915050565b80808310156106a1575090919050565b836004820152846024820152606060448201528660648201526084810160005b888110156106ef5780880151828201526020016106d7565b506060828960a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8b8b82606087013350600060045af150596107448d3d6106a7565b8c016107508187610695565b5b828110156107655760008152602001610751565b50929c50505050505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051600082529350602061061c565b63bdbf8c36598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051600082529350602061061c565b6385979f76598160e01b8152836004820152846024820152606060448201528760648201526084810160005b89811015610841578089015182820152602001610829565b506060828a60a40184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b815160408301513d6000853e8c8c82606087013350600060045af150596108968e3d6106a7565b8d016108a28187610695565b5b828110156108b757600081526020016108a3565b50929d5050505050505056546f6b656e207472616e7366657220666f72206465706f736974206661696c6564617474656d707420746f20736574207a65726f20646563617920636f6e7374616e746f766572666c6f7720647572696e6720657874656e64696e672074686520726567697374726174696f6e416e20756e646572666c6f7720696e20707269636520636f6d7075746174696f6e617474656d707420746f20736574207a65726f20646563617920636f6e7374616e74416e20756e646572666c6f7720696e20707269636520636f6d7075746174696f6e",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "contractExists(address)": {
        "params": {
          "contract_address": "The address to check whether a contract is deployed or not"
        },
        "returns": {
          "_0": "True if a contract exists, false otherwise"
        }
      },
      "decayedPrice(uint256,uint256)": {
        "params": {
          "_seconds_passed": "The number of seconds passed since the initial price was set",
          "_set_price": "The initial price"
        }
      },
      "setURL(string)": {
        "params": {
          "new_url": "The new URL string to be stored"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "contractExists(address)": {
        "notice": "Check if a contract exists"
      },
      "currentPrice()": {
        "notice": "The amount to deposit for registration or extension Note: the price moves quickly depending on what other addresses do. The current price might change after you send a `deposit()` transaction before the transaction is executed."
      },
      "decay_constant()": {
        "notice": "The amount of time (in seconds) till the price decreases to roughly 1/e."
      },
      "decayedPrice(uint256,uint256)": {
        "notice": "Calculates the decreased price after a number of seconds"
      },
      "everMadeDepositsLen()": {
        "notice": "A getter function for seeing the length of ever_made_deposits array"
      },
      "setURL(string)": {
        "notice": "Sets the URL used to access a service via HTTP Only a currently registered service can call this successfully"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4207,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "controller",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4221,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "set_price",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4223,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "set_price_at",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4227,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "decay_constant",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4230,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "min_price",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4233,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "price_bump_numerator",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 4236,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "price_bump_denominator",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 4239,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "registration_duration",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 4242,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "deprecated",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 4636,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "token",
        "offset": 1,
        "slot": "8",
        "type": "t_contract(Token)624"
      },
      {
        "astId": 4640,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "service_valid_till",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4644,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "urls",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 4647,
        "contract": "data/source/services/ServiceRegistry.sol:ServiceRegistry",
        "label": "ever_made_deposits",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Token)624": {
        "encoding": "inplace",
        "label": "contract Token",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}